---
comments: true
date: 2012-08-09 22:18:36
layout: post
slug: '%e3%80%8abuilding-java-programs%e3%80%8b-%e9%80%92%e5%bd%92%e5%b0%8f%e7%bb%93'
title: 《Building Java Programs》-递归小结
wordpress_id: 405
categories:
- Tips
tags:
- 算法
- 调用栈
- 递归
---

**递归**（Recursion）是一种是一个方法调用本身的算法。一个方法若使用递归，那么它就是一个**递归方法**。

**递归方法**包含两种情况：不用递归即可直接解决的**基本情况**（base case），以及需要使用递归调用简化问题的**递归情况**（recursive case）。

**递归方法**的调用通过在内部把每次调用的信息存储在一种叫做**调用栈**（call stack）的结构中来工作。当一个方法调用它本身时，关于这次调用的信息借置于**调用栈**的顶部。当一个方法调用结束时，程序将从**调用栈**中清除有关它的信息，并返回执行上一次调用。

一个**递归方法**如果没有基本情况，或它的递归情况不能合理的转化为基本情况，就会导致**无穷递归**的出现。

递归可以被用来绘制具有复杂特征的图形，包括**分形图形**。分形图形是具有相似特征的**递归图形**，通常被认为是“无限的复杂”。
