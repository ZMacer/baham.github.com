---
comments: true
date: 2012-08-02 11:49:24
layout: post
slug: '%e3%80%8abuilding-java-programs%e3%80%8b-%e7%bb%a7%e6%89%bf%e5%92%8c%e6%8e%a5%e5%8f%a3'
title: 《Building Java Programs》-继承和接口
wordpress_id: 313
categories:
- Tips
tags:
- OOD
- 接口
- 继承
---

**继承和接口**可以让我们的程序更加简洁清晰。**继承**可以让你在不同类之间共享代码从而减少冗余，还可以达到用统一的方法处理多个类对象的效果。**接口**也可以让你用统一的方法处理几个不同类型的对象，而且不需要这些对象之间共享代码。



	
  1. 通过**继承**可以在两种类型之间建立**父子关系**。

	
  2. **继承关系**中的子类捡回获得父类中所有**字段**和**方法**的一份拷贝。子类可以扩展父类，因为它可以在父类的基础上添加新的字段和方法。子类也可以覆盖从父类继承来的方法。

	
  3. Java中，几种不同类型的独享可以互相替换的特性成为**多态性**。

	
  4. 子类可以通过**super关键字**调用父类的**构造函数**和**方法**。

	
  5. Object类是所有类共同的父类。它包含了每个对象都应该具有的行为，如equals和toString方法。

	
  6. 继承让两个类之间具有**“is-a”**关系。如果两个类没有这种紧密的内在联系，那么继承可能并不是一个好的设计方案，在两者之间使用**“has-a”**关系可能是更好的选择。

	
  7. **接口**是一系列方法声明的集合。接口中指明了方法名称、参数和返回值的类型，但是没有给出方法具体的实现。类可以实现接口，并且可以实现多个接口。

	
  8. **接口**有助于实现**多态性**。如果两个或更多类都实现了某个接口，我们便可以用任何一个类来调用接口中声明的方法。

	
  9. **抽象类**是一种不能被实例化的类，不能创建这种类的对象。但抽象类可以作为父类继承，也可以为子类定义一些抽象的方法。

	
  10. 抽象类可以包含抽象方法。但其所有子类必须是想其中定义的抽象方法。



